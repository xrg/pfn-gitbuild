#/*! \page git-related macros
# */

#override this, please!
%git_repodir %(echo ~/build/)
%git_head HEAD

%git_gitdir %{git_repodir}/%{git_repo}/.git

%git_get_source if [ -d %{git_gitdir} ] ; then \
	pushd %{git_gitdir}/.. ;\
	/usr/bin/git archive --format=tar --prefix=%{name}-%{version}/ %{git_head} | \
		gzip -c > %{_sourcedir}/%{name}-%{version}.tar.gz ;\
	popd ; \
	gitrpm-changelog -d %{git_gitdir} -n %{name} -r %{git_head} -C %{_sourcedir} ;\
	fi

%git_get_source_sm if [ -d %{git_gitdir} ] ; then \
	pushd %{git_gitdir}/.. ;\
	git-archive-sm.sh -p %{name}-%{version}/ %{git_head} %{_sourcedir}/%{name}-%{version}.tar || exit $? ;\
	popd ; \
	gzip -f %{_sourcedir}/%{name}-%{version}.tar ; \
	gitrpm-changelog -d %{git_gitdir} -n %{name} -r %{git_head} -C %{_sourcedir} ;\
	fi

%git_clone_source if [ -d %{name}-%{version} ] ; then \
		cd %{name}-%{version} && git pull origin %{git_head} ; \
	else \
		git clone %{git_gitdir} %{name}-%{version} && \
		cd %{name}-%{version}/ ; \
		git checkout -f %{git_head} ;\
	fi ; \
	gitrpm-changelog -d %{git_gitdir} -n %{name} -r %{git_head} -C %{_sourcedir}

%git_prep_submodules(f) git submodule init && \
    %{-f: ( git submodule foreach git checkout -f && \
        git submodule foreach git clean -d -f -x || true ) && } \
        for SUBM in $(git config --get-regexp 'submodule\..*.url' | cut -d '.' -f 2) ; do \
                git submodule update --reference %{git_gitdir}/../$SUBM $SUBM ; done

#%git_get_ver  %(git --git-dir=%{git_gitdir} describe --tags | sed 's/^v\\?\\(.*\\)-\\([0-9]\\+\\)-g.*$/\\1/;s/-//;s/^v//')
#%git_get_rel  %(git --git-dir=%{git_gitdir} describe --tags | grep '\\-g.\\+$' | sed 's/^v\\?\\(.*\\)-\\([0-9]\\+\\)-g.*$/\\2/')

# These won't work, because they are evaluated before the git_get_source.
#git_get_ver %(grep '^Version:' %{_sourcedir}/%{name}-gitrpm.version | cut -f 2)
#git_get_rel %(grep '^Release:' %{_sourcedir}/%{name}-gitrpm.version | cut -f 2)

%git_get_ver %(gitrpm-version.sh -d %{git_gitdir} -n %{name} -r %{git_head} -C %{_sourcedir} -b Version)
%git_get_rel %(gitrpm-version.sh -d %{git_gitdir} -n %{name} -r %{git_head} -C %{_sourcedir} -B Release)

%git_get_relextra %(gitrpm-version.sh -d %{git_gitdir} -n %{name} -r %{git_head} -C %{_sourcedir} -B Extra )
%git_get_relextra0 %(gitrpm-version.sh -d %{git_gitdir} -n %{name} -r %{git_head} -C %{_sourcedir} -B Extra -0 )

%git_get_rel2 %{git_get_relextra0}%{git_get_rel}

%git_bs_source(:) %(if [ ! -e %{_sourcedir}/%1 ] ; then \
	echo "Bootstrap" %1 >&2 ; \
	tar -czf %{_sourcedir}/%1 --files-from=/dev/null; \
	fi ) %1

#eof
